1. Excel spreadsheets offer several advantages over CSV (Comma Separated Values) spreadsheets, including:
   - Excel supports formatting options such as bold, italics, colors, and conditional formatting, which CSV does not.
   - Excel allows for formulas and functions to be used within cells, enabling calculations and data manipulation.
   - Excel can handle multiple sheets within a single file, whereas CSV typically represents a single table of data.
   - Excel files can contain charts, graphs, and other visualizations.
   - Excel supports password protection and encryption for securing sensitive data.

2. You pass a file object opened in read mode (`'r'`) to `csv.reader()` and a file object opened in write mode (`'w'`) to `csv.writer()` to create reader and writer objects, respectively.

3. File objects for reader and writer objects need to be opened in the following modes:
   - For `csv.reader()`, the file should be opened in text mode with `'r'`.
   - For `csv.writer()`, the file should be opened in text mode with `'w'`.

4. The `writerow()` method takes a list argument and writes it to a CSV file.

5. The keyword arguments `delimiter` and `line terminator` do the following:
   - `delimiter`: Specifies the character used to separate fields in the CSV file. By default, it is a comma `,`.
   - `line terminator`: Specifies the character used to terminate lines in the CSV file. By default, it uses the newline character `\n`.

6. The `json.loads()` function takes a string of JSON data and returns a Python data structure, typically a dictionary.

7. The `json.dumps()` function takes a Python data structure, such as a dictionary, list, or tuple, and returns a string of JSON data.